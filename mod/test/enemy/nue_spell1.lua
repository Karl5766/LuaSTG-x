---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Karl2.
--- DateTime: 2021/6/1 23:39
---

local SpellSession = assert(require("BHElib.sessions.boss.spell_session"))

---@class Nue.spell1:SpellSession
local M = LuaClass("Nue.spell1", SpellSession)

local BossHitbox = require("BHElib.units.enemy.boss_hitbox_prefab")
local Input = require("BHElib.input.input_and_recording")
local Coordinates = require("BHElib.unclassified.coordinates_and_screen")
local Prefab = require("core.prefab")

M.SPELL_DISPLAY_NAME = "test spell \"测试符卡\""

---------------------------------------------------------------------------------------------------

local MouseFollower = Prefab.NewX(Prefab.Object)
function MouseFollower:init()
    self.bound = false
    self.group = GROUP_GHOST
end

function MouseFollower:frame()
    local x, y = Input:getRecordedMousePositionInUI()
    self.x, self.y = Coordinates.uiToGame(x, y)
    task.Do(self)
end
Prefab.Register(MouseFollower)

---------------------------------------------------------------------------------------------------

function M.__create(parent, boss)
    local self = SpellSession.__create(parent, boss, 12000, "test_attack")

    self.tuning_ui = self.game_scene.tuning_ui

    return self
end

function M:ctor()
    local hp = 360
    BossHitbox(16, hp, self)

    ---@type NueAnimation
    local boss = self.boss
    local mouse_follower = MouseFollower()
    self.mouse_follower = mouse_follower

    task.New(self, function()
        boss:move(60, -boss.x, 120 - boss.y, boss.x > 0, self)

        self:initChain()

        lstg.eventDispatcher:addListener("onTuningUIExit", function()
            self:initChain()
        end, 0, tostring(self))
    end)
end

function M:endSession()
    SpellSession.endSession(self)
    lstg.eventDispatcher:removeListenerByTag(tostring(self))
end

function M:initChain()
    local boss = self.boss
    task.Clear(boss)  -- clear all matrices' tasks
    task.Clear(self.mouse_follower)

    local chains, references = self.tuning_ui:getChains(nil)

    self.chains = {}
    self.mouse_chains = {}
    for i = 1, #chains do
        ---@type TuningMatrixIndicesArray
        local indices = references[i]
        for j = 1, indices:getNumIndices() do
            if indices:isBoss(j) then
                table.insert(self.chains, chains[i])
            elseif indices:isMouse(j) then
                table.insert(self.mouse_chains, chains[i])
            end
        end
    end

    if self.tuning_ui.tuning_manager.boss_fire_flag then
        self:fire(boss.x, boss.y)
    end
end

function M:fire()

    PlaySound("se:explode", 0.1, 0, true)

    local chains = self.chains
    for i = 1, #chains do
        local chain = chains[i]
        chain:sparkAll(self.boss)
    end
end

function M:mouseFire()

    PlaySound("se:explode", 0.1, 0, true)

    local chains = self.mouse_chains
    for i = 1, #chains do
        local chain = chains[i]
        chain:sparkAll(self.mouse_follower)
    end
end

function M:update(dt)
    SpellSession.update(self, dt)

    if Input:isMouseButtonJustChanged(true, true) then
        self:mouseFire()
    end
end

return M