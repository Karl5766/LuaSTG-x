---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Karl2.
--- DateTime: 2021/3/4 17:08
---

local GameScene = require("BHElib.scenes.game_scene")

require("BHElib.scenes.menu.menu_page")
local _scene_transition = require("BHElib.scenes.scene_transition")
local _menu_transition = require("BHElib.scenes.menu.menu_task")

---@class Menu:GameScene
local Menu = LuaClass("scenes.Menu", GameScene)

---------------------------------------------------------------------------------------------------
---override/virtual

---create and return a new Menu instance
---@param current_task table specifies a task that the menu should carry out; format {string, table}
---@return Menu a menu object
function Menu.__create(task_spec)
    local self = GameScene.__create()

    self.task_spec = task_spec

    return self
end

---create a menu scene
---@return cc.Scene a new cocos scene
function Menu:createScene()
    -- initialize by first creating all menu pages

    -- for more complex menu, consider further moving the code of declaring object classes to another file

    local main_menu_content = {
        {"Start Game", function()
            task.New(self, function()
                -- fade out menu page
                _menu_transition.transitionTo(self.cur_menu, nil, 30)
                task.Wait(30)

                -- start stage
                local stage = self:constructStage()
                _scene_transition.transitionTo(self, stage)
            end)
        end},
    }
    local main_menu = New(SimpleTextMenuPage, "TestMenu", main_menu_content, 1)
    self.cur_menu = _menu_transition.transitionTo(nil, main_menu, 30)

    return GameScene.createScene(self)
end

---construct the next stage
---@return Stage an object of Stage class
function Menu.constructStage(self)
    -- for all stages
    local SceneGroupInitState = require("BHElib.scenes.stage.scene_group_init_state")
    local next_group_init_state = SceneGroupInitState()

    -- for first stage
    local GameSceneInitState = require("BHElib.scenes.stage.game_scene_init_state")
    local next_init_state = GameSceneInitState()

    -- mutable states
    local GlobalSceneState = require("BHElib.scenes.stage.global_scene_state")
    local is_replay = false
    local next_global_state = GlobalSceneState(is_replay)

    local StageClass = require("BHElib.scenes.stage.game_stage_sample")
    local stage = StageClass(next_group_init_state, next_init_state, next_global_state)

    return stage
end

function Menu:getSceneType()
    return "menu"
end

function Menu:cleanup()
end

local input = require("BHElib.input.input_and_replay")
function Menu:update(dt)
    GameScene.update(self, dt)
end

local hud_painter = require("BHElib.ui.hud")
function Menu.render(self)
    GameScene.render(self)
    hud_painter.drawHudBackground(
            "image:menu_hud_background",
            1.3
    )
end


return Menu